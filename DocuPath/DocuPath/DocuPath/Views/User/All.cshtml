@model IEnumerable<DocuPath.DataLayer.USER>
@{ ViewBag.Title = "All"; }

@* BREADCRUMB NAVIGATION: *@
<ol class="breadcrumb">
    <li>@Html.ActionLink("Home", "Index", "Home") </li>
    <li class="active">@Html.ActionLink("Users", "All") </li>
</ol>
@* PAGE HEADER & ACTION BUTTONS: *@
<div class="grid hdr-grid">
    <div class="page-hdr">
        <div class="page-header-subgrid">
            <div class="icon-circle mdl2icon mdl2-user"></div>
            <div class="circular-motif-left"><img src="~/Content/Resources/CircularMotifLeft.png" style="max-height: 45px" /></div>
            <div class="page-header-text">ALL USER PROFILES</div>
        </div>
    </div>
    <div class="page-btns">
        <div class="page-buttons-subgrid buttons-three">
            <div grid-area="left"><img src="~/Content/Resources/CircuitryMotifLeft.png" class="circuitry-left-motif" /></div>
            <div></div>
            <div grid-area="btn1">
                <form class="minimalform" action="javascript:void(0)" method="post" style="margin-top: 2px">
                    @Html.DropDownList("ddlNumTokens", new List<SelectListItem> {
                                        new SelectListItem { Value = "0", Text = "1", Selected = true },
                                        new SelectListItem { Value = "1", Text = "2" },
                                        new SelectListItem { Value = "2", Text = "3" },
                                        new SelectListItem { Value = "3", Text = "4" },
                                        new SelectListItem { Value = "4", Text = "5" },
                                        new SelectListItem { Value = "5", Text = "6" },
                                        new SelectListItem { Value = "6", Text = "7" },
                                        new SelectListItem { Value = "7", Text = "8" },
                                        new SelectListItem { Value = "8", Text = "9" },
                                        new SelectListItem { Value = "9", Text = "10" },
                                        new SelectListItem { Value = "10", Text = "11" },
                                        new SelectListItem { Value = "11", Text = "12" },
                                        new SelectListItem { Value = "12", Text = "13" },
                                        new SelectListItem { Value = "13", Text = "14" },
                                        new SelectListItem { Value = "14", Text = "15" },
                                    }, new { @class = "form-control", @style = "height: 40px; padding: 2px; display: inline" })
                </form>
            </div>
            <div grid-area="btn2">
                <form class="minimalform" action="javascript:void(0)" method="post" style="margin-top: 2px">
                    @* TODO: Link form action to GENERATE RATS *@
                    <button class="btn btn-default btn-generic btn-page-action mdl2icon mdl2-rat btn-mdl2icon" type="submit" data-toggle="tooltip" title="GENERATE REGISTRATION TOKEN(S)"></button>
                </form>
            </div>
            <div grid-area="btn3">
                <form class="minimalform" action="javascript:void(0)" style="margin-top: 2px">
                    <button id="btnDensityToggle" class="btn btn-default btn-generic btn-page-action mdl2icon mdl2-density btn-mdl2icon" data-toggle="tooltip" title="TOGGLE TABLE DENSITY"></button>
                </form>
            </div>
            <div></div>
            <div class="right-motif" grid-area="right"><img src="~/Content/Resources/CircuitryMotifRight.png" class="circuitry-right-motif" /></div>
        </div>
    </div>
</div>
@* ASPTABLE WITH ALL USER PROFILES: *@
<table id="allUP" class="table table-striped table-hover">
    <thead>
        <tr>
            <th data-id="identifier" data-column-id="UID" data-visible="false" data-identifier="true" class="colour-dpred">
                @Html.DisplayNameFor(model => model.UserID)
            </th>
            <th data-column-id="initials" data-formatter="initials" class="colour-dpred">
                @Html.DisplayNameFor(model => model.DisplayInitials)
            </th>
            <th data-column-id="nameSurname" data-order="asc" class="colour-dpred">
                @Html.DisplayName("Name & Surname")
            </th>
            <th data-column-id="HPCSARegNum" data-formatter="hpcsa" class="colour-dpred">
                @Html.DisplayNameFor(model => model.HPCSARegNumber)
            </th>
            <th data-column-id="nationalID" data-formatter="national" class="colour-dpred">
                @Html.DisplayNameFor(model => model.NationalID)
            </th>
            <th data-column-id="academicID" data-formatter="academic" class="colour-dpred">
                @Html.DisplayNameFor(model => model.AcademicID)
            </th>
            <th data-column-id="status" class="colour-dpred">
                @Html.DisplayNameFor(model => model.IsDeactivated)
            </th>
            <th data-column-id="commands" data-formatter="commands" data-sortable="false" class="colour-dpred">Actions</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.UserID)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.DisplayInitials)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.FirstName) @Html.DisplayFor(modelItem => item.LastName)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.HPCSARegNumber)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.NationalID)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.AcademicID)
                </td>
                @if (item.IsDeactivated == true)
                { <td>Deactivated</td> }
                else
	            { <td>Active</td> }
            </tr>
        }
    </tbody>
</table>

@section Scripts {
    @Scripts.Render("~/bundles/bootgrid")
    @Scripts.Render("~/bundles/moment")
    @Scripts.Render("~/bundles/materialdatetime")

    <script id="loadBootgrid" type="text/javascript">
        var grid = $("#allUP").bootgrid({
            caseSensitive: false,
            converters: {
                dpdate: {
                    from: function (value) { return moment(value); },
                    to: function (value) { return value.format("ddd D MMM YYYY"); }
                }
            },
            formatters: {
                // INSERTS APPROPRIATE ACTION BUTTONS FOR EACH LINE IN THE ASPTABLE:
                "commands": function (column, row) {
                    if (row.status.trim() == "Active") { /* CHECK IF THE USER IS ACTIVE, IF TRUE, THEN SHOW 'VIEW', 'EDIT' AND 'TOGGLE ACTIVATION': */
                        return "<a class=\"mdl2icon colour-dpblack\" href=\"/User/Details/" + row.UID.trim() + "\"><i class=\"mdl2-view\" data-toggle=\"tooltip\" value=\"View\" style=\"font-style: normal\"></i></a>" +
                    "<a class=\"mdl2icon colour-dpblack\" data-toggle=\"tooltip\" value=\"Edit\" href=\"/User/Edit/" + row.UID.trim() + "\"><i class=\"mdl2-edit\" style=\"font-style: normal\"></i></a>" +
                    "<a class=\"mdl2icon colour-dpblack\" data-toggle=\"tooltip\" value=\"Toggle Status\" href=\"/User/ToggleStatus/" + row.UID.trim() + "\"><i class=\"mdl2-powerbtn\" style=\"font-style: normal\"></i></a>";
                    } else if (row.status.trim() == "Deactivated") { /* CHECK IF THE USER IS DEACTIVATED, IF TRUE, THEN SHOW 'VIEW' and 'TOGGLE ACTIVATION': */
                        return "<a class=\"mdl2icon colour-dpblack\" href=\"/User/Details/" + row.UID.trim() + "\"><i class=\"mdl2-view\" data-toggle=\"tooltip\" value=\"View\" style=\"font-style: normal\"></i></a>" +
                    "<a class=\"mdl2icon colour-dpblack\" data-toggle=\"tooltip\" value=\"Toggle Status\" href=\"/User/ToggleStatus/" + row.UID.trim() + "\"><i class=\"mdl2-powerbtn\" style=\"font-style: normal\"></i></a>";
                    }
                 },
                "initials": function (column, row) { /* APPLY LARGE IDENTIFIER CLASS TO ALL INITIALS: */
                    return "<span class=\"table-large-identifier\">"+ row.initials + "</span>";
                },
                "hpcsa": function (column, row) { /* APPLY LARGE IDENTIFIER CLASS TO ALL HPCSA REG NUMBERS: */
                    return "<span class=\"table-large-identifier\">" + row.HPCSARegNum + "</span>";
                },
                "national": function (column, row) { /* APPLY LARGE IDENTIFIER CLASS TO ALL NATIONAL ID NUMBERS: */
                    return "<span class=\"table-large-identifier\">" + row.nationalID + "</span>";
                },
                "academic": function (column, row) { /* APPLY LARGE IDENTIFIER CLASS TO ALL ACADEMIC ID NUMBERS: */
                    return "<span class=\"table-large-identifier\">" + row.academicID + "</span>";
                }
            }
        });
    </script>

    <script id="onDomReady" type="text/javascript">
        // Enable tooltips:
        $(document).ready(function () {
            $('[data-toggle="tooltip"]').tooltip();
        });

        // Toggle Table Density:
        $("#btnDensityToggle").click(function () {
            var $target = $("#allUP");
            var $condensed = "table-condensed";
            var $minimal = "table-minimal"
            if ($target.hasClass($condensed) === false && $target.hasClass($minimal) === false) { $target.addClass($condensed); }
            else if ($target.hasClass($condensed)) { $target.removeClass($condensed); $target.addClass($minimal); }
            else if ($target.hasClass($minimal)) { $target.removeClass($minimal); }
            $("#btnDensityToggle").blur()
        });
    </script>
}