@model DocuPath.Models.DPViewModels.MonthlyDutyRosterViewModel
@using DocuPath.Models
@{ ViewBag.Title = "Monthly Duty Roster"; ViewBag.GenericHAPTICLocator = "MDRGeneric"; ViewBag.SpecificHAPTICLocator = "MDRSpecific"; ViewBag.PageInfoLocator = "MDR"; }

@* BREADCRUMB NAVIGATION: *@
<ol class="breadcrumb">
    <li>@Html.ActionLink("Home", "Index", "Home") </li>
    <li class="active">@Html.ActionLink("Monthly Duty Roster", "MonthlyDutyRoster") </li>
</ol>
@* PAGE HEADER & ACTION BUTTONS: *@
<div class="grid hdr-grid">
    <div class="page-hdr">
        <div class="page-header-subgrid">
            <div class="icon-circle mdl2icon mdl2-mdrcompile"></div>
            <div class="circular-motif-left"><img src="~/Content/Resources/CircularMotifLeft.png" style="max-height: 45px" /></div>
            <div class="page-header-text">MONTHLY DUTY ROSTER</div>
        </div>
    </div>
    <div class="page-btns">
        <div class="page-buttons-subgrid buttons-five">
            <div grid-area="left"><img src="~/Content/Resources/CircuitryMotifLeft.png" class="circuitry-left-motif" /></div>
            <div>
                @Html.DropDownList("ddlTargetMonth", new List<SelectListItem> { new SelectListItem { Value = "0", Text = ViewBag.CurrentMonthName, Selected = true }, new SelectListItem { Value = "1", Text = ViewBag.NextMonthName } }, new { @class = "form-control", @style = "height: 40px; padding: 2px; margin-top: 5px; display: inline" })
            </div>
            <div grid-area="btn1">
                <form class="minimalform" action="~/Home/Index" method="post" style="margin-top: 2px">
                    <button class="btn btn-default btn-generic btn-page-action mdl2icon mdl2-cancel btn-mdl2icon" onclick="this.blur()" type="submit" data-toggle="tooltip" title="CANCEL"></button>
                </form>
            </div>
            <div grid-area="btn2">
                <form class="minimalform" action="~/Scheduling/MonthlyDutyRoster" method="post" style="margin-top: 2px">
                    <button id="btnSave" class="btn btn-default btn-generic btn-page-action mdl2icon mdl2-save btn-mdl2icon" type="submit" data-toggle="tooltip" title="SAVE & EXIT"></button>
                </form>
            </div>
            <div grid-area="btn3">
                <form class="minimalform" action="javascript:void(0)" style="margin-top: 2px">
                    <button id="btnSave" class="btn btn-default btn-generic btn-page-action mdl2icon mdl2-signoff btn-mdl2icon" type="submit" data-toggle="tooltip" title="FINALISE"></button>
                </form>
            </div>
            <div grid-area="btn4">
                <img src="~/Content/Resources/SlantedDivider.png" style="height: 45px; margin-top: 3px" />
            </div>
            <div grid-area="btn5">
                <form class="minimalform" action="javascript:void(0)" style="margin-top: 2px">
                    <button id="btnHapticToggle" class="btn btn-default btn-generic btn-page-action mdl2icon mdl2-help btn-mdl2icon" onclick="this.blur()" data-toggle="tooltip" title="HELP"></button>
                </form>
            </div>
            <div></div>
            <div class="right-motif" grid-area="right"><img src="~/Content/Resources/CircuitryMotifRight.png" class="circuitry-right-motif" /></div>
        </div>
    </div>
</div>

@using (Html.BeginForm())
{
    <input id="btnSubmit" class="hidden" type="submit" />
    <div class="form-horizontal border-generic form-generic">
        @*@Html.ValidationSummary(true, "", new { @class = "text-danger" })*@
        <div id="pnlCurrentMonth" class="panel panel-default" style="margin-bottom: 0px">
            <div class="panel-heading">
                <span class="mdl2icon mdl2-date panel-mdl2icon"></span>
                <span>Duty Roster for the Month of <span class="colour-dpred" style="font-weight: normal">@ViewBag.CurrentMonthName</span></span>
            </div>
            <div class="panel-body" @*style="min-height: 169.2px; max-height: 169.2px;"*@>
                <table class="table table-striped table-condensed">
                    <tr>
                        <th class="colour-dpred text-center mdr-datesizing">Date</th>
                        @foreach (var slot in Model.slots)
                                {
                                <th class="colour-dpred text-center mdr-allocationsizing" style="font-family: 'U.S. 101'; font-size: 20pt; font-weight: normal">
                                    @slot.SlotDesc
                                </th>
                                }
                        <th class="colour-dpred text-center mdr-commentsizing">Comments</th>
                    </tr>

                    @*@for (int i = 0; i < Model.currentMonthDayCount; i++)*@
                    @*@{ var test1 = Model.currentMonthAllocations.GroupBy(a => a.Date).Select(a => a.First());
                        var test = test1.Count(); }*@
                    @for (int i = 0; i < Model.currentMonthAllocations.GroupBy(a => a.Date).Select(a => a.FirstOrDefault()).Count(); i++)
                            {
                                if (Model.currentMonthAllocations[i].Date.DayOfWeek == DayOfWeek.Saturday || Model.currentMonthAllocations[i].Date.DayOfWeek == DayOfWeek.Sunday)
                                {
                            <tr class="tr-weekendday">
                                <td class="text-right mdr-datesizing"></td>
                                <td class="mdr-allocationsizing"></td>
                                <td class="mdr-allocationsizing"></td>
                                <td class="mdr-allocationsizing"></td>
                                <td class="mdr-allocationsizing"></td>
                                <td class="mdr-allocationsizing"></td>
                                <td class="mdr-allocationsizing"></td>
                                <td class="mdr-commentsizing"></td>
                            </tr>
                                }
                                else
                                {
                            <tr class="tr-weekday">
                                <td class="text-right mdr-datesizing" style="font-weight: bold">
                                    @Model.currentMonthAllocations[i].DateString
                                </td>
                                <td class="mdr-allocationsizing">
                                    @Html.DropDownListFor(model => model.currentMonthAllocations[i].Slot1AUID, new SelectList(Model.users, "uID", "uInitials"), "...", htmlAttributes: new { @class = "form-control frmctrl-small" })
                                </td>
                                <td class="mdr-allocationsizing">
                                    @Html.DropDownListFor(model => model.currentMonthAllocations[i].Slot1BUID, new SelectList(Model.users, "uID", "uInitials"), "...", htmlAttributes: new { @class = "form-control frmctrl-small" })
                                </td>
                                <td class="mdr-allocationsizing">
                                    @Html.DropDownListFor(model => model.currentMonthAllocations[i].Slot1CUID, new SelectList(Model.users, "uID", "uInitials"), "...", htmlAttributes: new { @class = "form-control frmctrl-small" })
                                </td>
                                <td class="mdr-allocationsizing">
                                    @Html.DropDownListFor(model => model.currentMonthAllocations[i].Slot2AUID, new SelectList(Model.users, "uID", "uInitials"), "...", htmlAttributes: new { @class = "form-control frmctrl-small" })
                                </td>
                                <td class="mdr-allocationsizing">
                                    @Html.DropDownListFor(model => model.currentMonthAllocations[i].Slot2BUID, new SelectList(Model.users, "uID", "uInitials"), "...", htmlAttributes: new { @class = "form-control frmctrl-small" })
                                </td>
                                <td class="mdr-allocationsizing">
                                    @Html.DropDownListFor(model => model.currentMonthAllocations[i].SlotCallUID, new SelectList(Model.users, "uID", "uInitials"), "...", htmlAttributes: new { @class = "form-control frmctrl-small" })
                                </td>
                                <td class="mdr-commentsizing">
                                    @Html.EditorFor(model => model.currentMonthAllocations[i].DayComments, new { htmlAttributes = new { @class = "form-control frmctrl-small", @style = "width: 100%", @placeholder = "Type comments here..." } })
                                </td>
                            </tr>
                                }
                            }
                </table>
            </div>
        </div>

        @*<div id="pnlNextMonth" class="panel panel-default" style="margin-bottom: 0px">
                <div class="panel-heading">
                    <div class="row">
                        <div class="col-md-8">
                            <span class="mdl2icon mdl2-date panel-mdl2icon"></span>
                            <span>Duty Roster for the Month of <span class="colour-dpred" style="font-weight: normal">@ViewBag.NextMonthName</span></span>
                        </div>
                        <div class="col-md-4 text-right" style="padding-right: 20px">

                        </div>
                    </div>
                </div>
                <div class="panel-body">
                    <table class="table table-striped table-condensed">
                        <tr>
                            <th class="colour-dpred text-center mdr-datesizing">Date</th>
                            @foreach (var slot in Model.slots)
                            {
                                <th class="colour-dpred text-center mdr-allocationsizing" style="font-family: 'U.S. 101'; font-size: 20pt; font-weight: normal">
                                    @slot.SlotDesc
                                </th>
                            }
                            <th class="colour-dpred text-center mdr-commentsizing">Comments</th>
                        </tr>

                        @for (int i = 0; i < Model.nextMonthAllocations.GroupBy(a => a.Date).Select(a => a.FirstOrDefault()).Count(); i++)
                        {
                            if (Model.nextMonthAllocations[i].Date.DayOfWeek == DayOfWeek.Saturday || Model.nextMonthAllocations[i].Date.DayOfWeek == DayOfWeek.Sunday)
                            {
                                <tr class="tr-weekendday">
                                    <td class="text-right mdr-datesizing"></td>
                                    <td class="mdr-allocationsizing"></td>
                                    <td class="mdr-allocationsizing"></td>
                                    <td class="mdr-allocationsizing"></td>
                                    <td class="mdr-allocationsizing"></td>
                                    <td class="mdr-allocationsizing"></td>
                                    <td class="mdr-allocationsizing"></td>
                                    <td class="mdr-commentsizing"></td>
                                </tr>
                            }
                            else
                            {
                                <tr class="tr-weekday">
                                    <td class="text-right mdr-datesizing" style="font-weight: bold">
                                        @Model.nextMonthAllocations[i].DateString
                                    </td>
                                    <td class="mdr-allocationsizing">
                                        @Html.DropDownListFor(model => model.nextMonthAllocations[i].Slot1AUID, new SelectList(Model.users, "uID", "uInitials"), Model.users.Where(x => x.uID == Model.nextMonthAllocations[i].Slot1AUID).FirstOrDefault().uInitials, htmlAttributes: new { @class = "form-control frmctrl-small" })
                                    </td>
                                    <td class="mdr-allocationsizing">
                                        @Html.DropDownListFor(model => model.nextMonthAllocations[i].Slot1BUID, new SelectList(Model.users, "uID", "uInitials"), Model.users.Where(x => x.uID == Model.nextMonthAllocations[i].Slot1BUID).FirstOrDefault().uInitials, htmlAttributes: new { @class = "form-control frmctrl-small" })
                                    </td>
                                    <td class="mdr-allocationsizing">
                                        @Html.DropDownListFor(model => model.nextMonthAllocations[i].Slot1CUID, new SelectList(Model.users, "uID", "uInitials"), Model.users.Where(x => x.uID == Model.nextMonthAllocations[i].Slot1CUID).FirstOrDefault().uInitials, htmlAttributes: new { @class = "form-control frmctrl-small" })
                                    </td>
                                    <td class="mdr-allocationsizing">
                                        @Html.DropDownListFor(model => model.nextMonthAllocations[i].Slot2AUID, new SelectList(Model.users, "uID", "uInitials"), Model.users.Where(x => x.uID == Model.nextMonthAllocations[i].Slot2AUID).FirstOrDefault().uInitials, htmlAttributes: new { @class = "form-control frmctrl-small" })
                                    </td>
                                    <td class="mdr-allocationsizing">
                                        @Html.DropDownListFor(model => model.nextMonthAllocations[i].Slot2BUID, new SelectList(Model.users, "uID", "uInitials"), Model.users.Where(x => x.uID == Model.nextMonthAllocations[i].Slot2BUID).FirstOrDefault().uInitials, htmlAttributes: new { @class = "form-control frmctrl-small" })
                                    </td>
                                    <td class="mdr-allocationsizing">
                                        @Html.DropDownListFor(model => model.nextMonthAllocations[i].SlotCallUID, new SelectList(Model.users, "uID", "uInitials"), Model.users.Where(x => x.uID == Model.nextMonthAllocations[i].SlotCallUID).FirstOrDefault().uInitials, htmlAttributes: new { @class = "form-control frmctrl-small" })
                                    </td>
                                    <td class="mdr-commentsizing">
                                        @Html.EditorFor(model => model.nextMonthAllocations[i].DayComments, new { htmlAttributes = new { @class = "form-control frmctrl-small", @style = "width: 100%", @placeholder = "Type comments here..." } })
                                    </td>
                                </tr>
                            }
                        }
                    </table>
                </div>
            </div>*@
    </div>
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    @Scripts.Render("~/bundles/toggle")
    @Scripts.Render("~/bundles/materialdatetime")

    <script>
        $(document).ready(function check() {
            $("#pnlNextMonth").hide()
        });

        $(document).ready(function () {
            $('[data-toggle="tooltip"]').tooltip();
        });

        $('button').click(function () {
            this.blur();
        });

        $("#ddlTargetMonth").change(function () {
            if ($("#ddlTargetMonth").val() == "0") {
                $("#pnlCurrentMonth").show("slow"),
                $("#pnlNextMonth").hide("slow")
            } else {
                $("#pnlCurrentMonth").hide("slow"),
                $("#pnlNextMonth").show("slow")
            }
        });
    </script>
}