@model IEnumerable<DocuPath.DataLayer.AUDIT_LOG>
@using DocuPath.DataLayer;
@{ ViewBag.Title = "All"; }

@* BREADCRUMB NAVIGATION: *@
<ol class="breadcrumb">
    <li>@Html.ActionLink("Home", "Index", "Home") </li>
    <li class="active">@Html.ActionLink("Audit Trail", "All") </li>
</ol>
@* PAGE HEADER & ACTION BUTTONS: *@
<div class="grid hdr-grid">
    <div class="page-hdr">
        <div class="page-header-subgrid">
            <div class="icon-circle mdl2icon mdl2-auditlog"></div>
            <div class="circular-motif-left"><img src="~/Content/Resources/CircularMotifLeft.png" style="max-height: 45px" /></div>
            <div class="page-header-text">ALL AUDIT LOG ENTRIES</div>
        </div>
    </div>
    <div class="page-btns">
        <div class="page-buttons-subgrid buttons-one">
            <div grid-area="left"><img src="~/Content/Resources/CircuitryMotifLeft.png" class="circuitry-left-motif" /></div>
            <div></div>
            <div grid-area="btn1">
                <form class="minimalform" action="javascript:void(0)" style="margin-top: 2px">
                    <button id="btnDensityToggle" class="btn btn-default btn-generic btn-page-action mdl2icon mdl2-density btn-mdl2icon" data-toggle="tooltip" title="TOGGLE TABLE DENSITY"></button>
                </form>
            </div>
            <div></div>
            <div class="right-motif" grid-area="right"><img src="~/Content/Resources/CircuitryMotifRight.png" class="circuitry-right-motif" /></div>
        </div>
    </div>
</div>
@* ASPTABLE WITH ALL AUDIT TRAIL ENTRIES: *@
<table id="allAT" class="table table-striped table-hover">
    <thead>
        <tr>
            <th data-id="identifier" data-column-id="TXID" data-visible="false" data-identifier="true" class="colour-dpred">
                @Html.DisplayNameFor(model => model.AuditLogTxID)
            </th>
            <th data-column-id="txOrigin" data-formatter="origin" data-cssClass="text-center" class="colour-dpred">
                @Html.DisplayNameFor(model => model.UserID)
            </th>
            <th data-column-id="txType" class="colour-dpred">
                @Html.DisplayNameFor(model => model.AuditLogTxTypeID)
            </th>
            <th data-column-id="txDateStamp" data-converter="dpdate" class="colour-dpred">
                @Html.DisplayNameFor(model => model.TxDateStamp)
            </th>
            <th data-column-id="txTimeStamp" data-converter="dptime" data-formatter="dptime" class="colour-dpred">
                @Html.DisplayNameFor(model => model.TxTimeStamp)
            </th>
            <th data-column-id="txCriticalData" data-formatter="critdata" class="colour-dpred">
                @Html.DisplayNameFor(model => model.TxCriticalDataString)
            </th>
            <th data-column-id="txNew" data-visible="false" data-visibleInSelection="false" class="colour-dpred">
                @Html.DisplayNameFor(model => model.TxNewRecord)
            </th>
            <th data-column-id="txOld" data-visible="false" data-visibleInSelection="false" class="colour-dpred">
                @Html.DisplayNameFor(model => model.TxOldRecord)
            </th>
            <th data-column-id="commands" data-formatter="commands" data-sortable="false" class="colour-dpred">Actions</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.AuditLogTxID)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.USER.DisplayInitials)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.AUDIT_TX_TYPE.TypeValue)
                </td>
                <td class="table-large-identifier">
                    @Html.DisplayFor(modelItem => item.TxDateStamp)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.TxTimeStamp)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.TxCriticalDataString)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.TxNewRecord)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.TxOldRecord)
                </td>
            </tr>
        }
    </tbody>
</table>

@section Scripts {
    @Scripts.Render("~/bundles/bootgrid")
    @Scripts.Render("~/bundles/moment")
    @Scripts.Render("~/bundles/materialdatetime")

    <script id="loadBootgrid" type="text/javascript">
        var grid = $("#allAT").bootgrid({
            caseSensitive: false,
            rowCount: [10, 25, 50, 100],
            converters: {
                dpdate: {
                    from: function (value) { return moment(value); },
                    to: function (value) { return value.format("D MMM YYYY"); }
                },
                dptime: {
                    from: function (value) { return moment(value); },
                    to: function (value) { return value.format("HH:mm:ss"); }
                }
            },
            formatters: {
                // INSERTS APPROPRIATE ACTION BUTTONS FOR EACH LINE IN THE ASPTABLE:
                "commands": function (column, row) {
                    if (row.txCriticalData.toUpperCase().includes("UPDATE") == true ) { /* CHECK IF THE ENTRY WAS CREATED AS A RESULT OF AN UPDATE/EDIT OF INFORMATION, IF TRUE, THEN SHOW 'VIEW': */
                            return "<a class=\"mdl2icon colour-dpblack\" href=\"/AuditTrail/Details/" + row.TXID.trim() + "\"><i class=\"mdl2-view\" data-toggle=\"tooltip\" value=\"View\" style=\"font-style: normal\"></i></a>";
                        } else { /* IN ALL OTHER CASES, SHOW ALL 'NONE' (FALLBACK): */
                            return "<span>None</span>";
                        }
                },
                "origin": function (column, row) { /* APPLY LARGE IDENTIFIER CLASS TO ALL DISPLAY INITIALS: */
                    return "<span class=\"table-display-initials\">" + row.txOrigin + "</span>";
                },
                "critdata": function (column, row) { /* APPLY SMALLER FONT SIZE CLASS TO ALL CRITICAL DATA STRINGS: */
                    return "<span class=\"table-critical-data\">" + row.txCriticalData + "</span>";
                },
                "dptime": function (column, row) { /* APPLY VISIBILITY CLASS TO ALL TIMES: */
                    return "<span class=\"table-timestamp\">" + row.txTimeStamp.format("HH:mm:ss") + "</span>";
                }
            }
        });
    </script>

    <script id="onDomReady" type="text/javascript">
        // Enable tooltips:
        $(document).ready(function () {
            $('[data-toggle="tooltip"]').tooltip();
        });

        // Toggle Table Density:
        $("#btnDensityToggle").click(function () {
            var $target = $("#allAT");
            var $condensed = "table-condensed";
            var $minimal = "table-minimal"
            if ($target.hasClass($condensed) === false && $target.hasClass($minimal) === false) { $target.addClass($condensed); }
            else if ($target.hasClass($condensed)) { $target.removeClass($condensed); $target.addClass($minimal); }
            else if ($target.hasClass($minimal)) { $target.removeClass($minimal); }
            $("#btnDensityToggle").blur()
        });
    </script>
}