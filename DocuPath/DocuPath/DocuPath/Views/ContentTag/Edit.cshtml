@model DocuPath.Models.DPViewModels.ContentTagViewModel
@using DocuPath.Models;
@{ ViewBag.Title = "Edit"; ViewBag.GenericHAPTICLocator = "UpdateGeneric"; ViewBag.SpecificHAPTICLocator = "UpdateCTSpecific"; ViewBag.PageInfoLocator = "UpdateCT"; }

@* BREADCRUMB NAVIGATION: *@
<ol class="breadcrumb">
    <li>@Html.ActionLink("Home", "Index", "Home") </li>
    <li>@Html.ActionLink("Content Tags", "All", "ContentTag") </li>
    <li class="active">@Html.ActionLink("Edit Content Tag", "Edit") </li>
</ol>
@* PAGE HEADER & ACTION BUTTONS: *@
<div class="grid hdr-grid">
    <div class="page-hdr">
        <div class="page-header-subgrid">
            <div class="icon-circle mdl2icon mdl2-tag"></div>
            <div class="circular-motif-left"><img src="~/Content/Resources/CircularMotifLeft.png" style="max-height: 45px" /></div>
            <div class="page-header-text">EDIT CONTENT TAG</div>
        </div>
    </div>
    <div class="page-btns">
        <div class="page-buttons-subgrid buttons-four">
            <div grid-area="left"><img src="~/Content/Resources/CircuitryMotifLeft.png" class="circuitry-left-motif" /></div>
            <div></div>
            <div grid-area="btn1">
                <form class="minimalform" action="~/ContentTag/All" style="margin-top: 2px">
                    <button class="btn btn-default btn-generic btn-page-action mdl2icon mdl2-backprevious btn-mdl2icon" onclick="this.blur()" type="submit" data-toggle="tooltip" title="BACK TO LIST"></button>
                </form>
            </div>
            <div grid-area="btn2">
                <form class="minimalform" action="javascript:void(0)" style="margin-top: 2px">
                    @* TODO: Link form action to SAVE LC *@
                    <button id="btnSave" class="btn btn-default btn-generic btn-page-action mdl2icon mdl2-save btn-mdl2icon" type="submit" data-toggle="tooltip" title="SAVE & EXIT"></button>
                </form>
            </div>
            <div grid-area="btn3">
                <img src="~/Content/Resources/SlantedDivider.png" style="height: 45px; margin-top: 3px" />
            </div>
            <div grid-area="btn4">
                <form class="minimalform" action="javascript:void(0)" style="margin-top: 2px">
                    <button id="btnHapticToggle" class="btn btn-default btn-generic btn-page-action mdl2icon mdl2-help btn-mdl2icon" onclick="this.blur()" data-toggle="tooltip" title="HELP"></button>
                </form>
            </div>
            <div></div>
            <div class="right-motif" grid-area="right"><img src="~/Content/Resources/CircuitryMotifRight.png" class="circuitry-right-motif" /></div>
        </div>
    </div>
</div>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    <div class="form-horizontal border-generic form-generic">
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.catID)
        @Html.HiddenFor(model => model.subcatID)
        @Html.HiddenFor(model => model.conditionID)
        <input id="btnPOST" class="hidden" type="submit" />
        <div class="row" style="margin-left: 0px">
            <div class="col-md-12" style="padding-left: 0px; padding-right: 15px">
                <div class="panel panel-default" style="margin-bottom: 0px">
                    <div class="panel-heading">
                        <span class="mdl2icon mdl2-tag panel-mdl2icon"></span>
                        <span>CONTENT TAG DETAILS</span>
                    </div>
                    <div class="panel-body">
                        <div class="row" style="margin-left: 0px; margin-right: 0px">
                            <div class="col-md-2">
                                <div class="form-group">
                                    @Html.LabelFor(model => model.tag.ContentTagCode, htmlAttributes: new { @class = "control-label col-md-12", @style = "padding-left: 0px; text-align: left" })
                                    <div class="col-md-12" style="padding-left: 0px">
                                        @Html.EditorFor(model => model.tag.ContentTagCode, new { htmlAttributes = new { @class = "form-control large-identifier", @readonly = true, @style = "text-align: center; width: 100%", @value = Model.tag.ContentTagCode } })
                                        @Html.ValidationMessageFor(model => model.tag.ContentTagCode, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                            </div>
                            <div class="col-md-10">
                                <div class="form-group">
                                    @Html.LabelFor(model => model.tag.ContentTagText, htmlAttributes: new { @class = "control-label col-md-12", @style = "padding-left: 0px; text-align: left" })
                                    <div class="col-md-12" style="padding-left: 0px; padding-right: 0px">
                                        @Html.EditorFor(model => model.tag.ContentTagText, new { htmlAttributes = new { @class = "form-control", @style = "width: 100%", @placeholder = "Main Content Tag Descriptor Goes Here" } })
                                        @Html.ValidationMessageFor(model => model.tag.ContentTagText, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="row" style="margin-left: 0px; margin-right: 0px">
                            <div class="col-md-12" style="padding-left: 0px">
                                <div class="form-group">
                                    @Html.LabelFor(model => model.tag.TagCategoryID, htmlAttributes: new { @class = "control-label col-md-12", @style = "text-align: left" })
                                    <div class="col-md-12" style="padding-right: 0px">
                                        <div class="autocomplete-wrapper">
                                            @Html.AutocompleteFor(model => model.catName, model => model.catID, "GetCategories", "ContentTag", false, new { htmlAttributes = new { @class = "form-control", @placeholder = "Assign a Category..." } })
                                            @Html.ValidationMessageFor(model => model.tag.TagCategoryID, "", new { @class = "text-danger" })
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="row" style="margin-left: 0px; margin-right: 0px">
                            <div class="col-md-12" style="padding-left: 0px">
                                <div class="form-group">
                                    @Html.LabelFor(model => model.tag.TagSubCategoryID, htmlAttributes: new { @class = "control-label col-md-12", @style = "text-align: left" })
                                    <div class="col-md-12" style="padding-right: 0px">
                                        <div class="autocomplete-wrapper">
                                            @Html.AutocompleteFor(model => model.subcatName, model => model.subcatID, "GetSubcategories", "ContentTag", false, new { htmlAttributes = new { @class = "form-control", @placeholder = "Assign a Subcategory..." } })
                                            @Html.ValidationMessageFor(model => model.tag.TagSubCategoryID, "", new { @class = "text-danger" })
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="row" style="margin-left: 0px; margin-right: 0px">
                            <div class="col-md-12" style="padding-left: 0px">
                                <div class="form-group">
                                    @Html.LabelFor(model => model.tag.TagConditionID, htmlAttributes: new { @class = "control-label col-md-12", @style = "text-align: left" })
                                    <div class="col-md-12" style="padding-right: 0px">
                                        <div class="autocomplete-wrapper">
                                            @Html.AutocompleteFor(model => model.conditionName, model => model.conditionID, "GetConditions", "ContentTag", false, new { htmlAttributes = new { @class = "form-control", @placeholder = "Assign a Condition..." } })
                                            @Html.ValidationMessageFor(model => model.tag.TagConditionID, "", new { @class = "text-danger" })
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>


    @*<div class="form-horizontal">
        <h4>CONTENT_TAG</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.ContentTagID)

        <div class="form-group">
            @Html.LabelFor(model => model.TagCategoryID, "TagCategoryID", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("TagCategoryID", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.TagCategoryID, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.TagSubCategoryID, "TagSubCategoryID", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("TagSubCategoryID", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.TagSubCategoryID, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.TagConditionID, "TagConditionID", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("TagConditionID", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.TagConditionID, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ContentTagCode, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ContentTagCode, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ContentTagCode, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ContentTagText, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ContentTagText, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ContentTagText, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </div>
    </div>*@
}