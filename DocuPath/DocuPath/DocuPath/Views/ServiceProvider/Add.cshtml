@model DocuPath.Models.DPViewModels.ServiceProviderViewModel
@{ ViewBag.Title = "Add"; ViewBag.GenericHAPTICLocator = "AddGeneric"; ViewBag.SpecificHAPTICLocator = "AddSPSpecific"; ViewBag.PageInfoLocator = "AddSP"; }

@* BREADCRUMB NAVIGATION: *@
<ol class="breadcrumb">
    <li>@Html.ActionLink("Home", "Index", "Home") </li>
    <li>@Html.ActionLink("Service Providers", "All", "ServiceProvider") </li>
    <li class="active">@Html.ActionLink("Add Service Provider", "Add") </li>
</ol>
@* PAGE HEADER & ACTION BUTTONS: *@
<div class="grid hdr-grid">
    <div class="page-hdr">
        <div class="page-header-subgrid">
            <div class="icon-circle mdl2icon mdl2-serviceprovider"></div>
            <div class="circular-motif-left"><img src="~/Content/Resources/CircularMotifLeft.png" style="max-height: 45px" /></div>
            <div class="page-header-text">ADD SERVICE PROVIDER</div>
        </div>
    </div>
    <div class="page-btns">
        <div class="page-buttons-subgrid buttons-four">
            <div grid-area="left"><img src="~/Content/Resources/CircuitryMotifLeft.png" class="circuitry-left-motif" /></div>
            <div></div>
            <div grid-area="btn1">
                <form class="minimalform" action="~/ServiceProvider/All" style="margin-top: 2px">
                    <button class="btn btn-default btn-generic btn-page-action mdl2icon mdl2-backprevious btn-mdl2icon" onclick="this.blur()" type="submit" data-toggle="tooltip" title="BACK TO LIST"></button>
                </form>
            </div>
            <div grid-area="btn2">
                <form class="minimalform" action="javascript:void(0)" style="margin-top: 2px">
                    <button id="btnSave" class="btn btn-default btn-generic btn-page-action mdl2icon mdl2-save btn-mdl2icon" type="submit" data-toggle="tooltip" title="SAVE & EXIT"></button>
                </form>
            </div>
            <div grid-area="btn3">
                <img src="~/Content/Resources/SlantedDivider.png" style="height: 45px; margin-top: 3px" />
            </div>
            <div grid-area="btn4">
                <form class="minimalform" action="javascript:void(0)" style="margin-top: 2px">
                    <button id="btnHapticToggle" class="btn btn-default btn-generic btn-page-action mdl2icon mdl2-help btn-mdl2icon" onclick="this.blur()" data-toggle="tooltip" title="HELP"></button>
                </form>
            </div>
            <div></div>
            <div class="right-motif" grid-area="right"><img src="~/Content/Resources/CircuitryMotifRight.png" class="circuitry-right-motif" /></div>
        </div>
    </div>
</div>
@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal border-generic form-generic">
        @Html.ValidationSummary(true, "", new { @class = "validation-text text-danger" })
        <input id="btnPOST" class="hidden" type="submit" />
        <div class="row" style="margin-left: 0px">
                <div class="col-md-6" style="padding: 0px">
                    <div class="panel panel-default" style="margin-bottom: 0px">
                        <div class="panel-heading">
                            <span class="mdl2icon mdl2-company panel-mdl2icon"></span>
                            <span>COMPANY DETAILS</span>
                        </div>
                        <div class="panel-body" style="height: 298px">
                            <div class="form-group">
                                @Html.LabelFor(model => model.serviceProvider.CompanyName, htmlAttributes: new { @class = "control-label col-md-4" })
                                <div class="col-md-8">
                                    @Html.EditorFor(model => model.serviceProvider.CompanyName, new { htmlAttributes = new { @class = "form-control", @style = "width: 100%" } })
                                    @Html.ValidationMessageFor(model => model.serviceProvider.CompanyName, "", new { @class = "validation-text text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.serviceProvider.CompanyTelNum, htmlAttributes: new { @class = "control-label col-md-4" })
                                <div class="col-md-8">
                                    @Html.EditorFor(model => model.serviceProvider.CompanyTelNum, new { htmlAttributes = new { @class = "form-control", @style = "width: 100%" } })
                                    @Html.ValidationMessageFor(model => model.serviceProvider.CompanyTelNum, "", new { @class = "validation-text text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.serviceProvider.CompanyFaxNum, htmlAttributes: new { @class = "control-label col-md-4" })
                                <div class="col-md-8">
                                    @Html.EditorFor(model => model.serviceProvider.CompanyFaxNum, new { htmlAttributes = new { @class = "form-control", @style = "width: 100%" } })
                                    @Html.ValidationMessageFor(model => model.serviceProvider.CompanyFaxNum, "", new { @class = "validation-text text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.serviceProvider.CompanyEmail, htmlAttributes: new { @class = "control-label col-md-4" })
                                <div class="col-md-8">
                                    @Html.EditorFor(model => model.serviceProvider.CompanyEmail, new { htmlAttributes = new { @class = "form-control", @style = "width: 100%" } })
                                    @Html.ValidationMessageFor(model => model.serviceProvider.CompanyEmail, "", new { @class = "validation-text text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.serviceProvider.CompanyPhysicalAddress, htmlAttributes: new { @class = "control-label col-md-4" })
                                <div class="col-md-8">
                                    @Html.EditorFor(model => model.serviceProvider.CompanyPhysicalAddress, new { htmlAttributes = new { @class = "form-control", @style = "width: 100%" } })
                                    @Html.ValidationMessageFor(model => model.serviceProvider.CompanyPhysicalAddress, "", new { @class = "validation-text text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.serviceProvider.CompanyPostalAddress, htmlAttributes: new { @class = "control-label col-md-4" })
                                <div class="col-md-8">
                                    @Html.EditorFor(model => model.serviceProvider.CompanyPostalAddress, new { htmlAttributes = new { @class = "form-control", @style = "width: 100%" } })
                                    @Html.ValidationMessageFor(model => model.serviceProvider.CompanyPostalAddress, "", new { @class = "validation-text text-danger" })
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="col-md-6" style="padding-left: 5px; padding-right: 15px">
                    <div class="panel panel-default" style="margin-bottom: 0px; height: 100%">
                        <div class="panel-heading">
                            <span class="mdl2icon mdl2-representative panel-mdl2icon"></span>
                            <span>REPRESENTATIVE DETAILS</span>
                        </div>
                        <div class="panel-body">
                            <div class="form-group">
                                @Html.LabelFor(model => model.serviceProvider.TitleID, "Title", htmlAttributes: new { @class = "control-label col-md-4" })
                                <div class="col-md-8">
                                    @Html.DropDownListFor(model => model.serviceProvider.TitleID, new SelectList(Model.titles, "TitleID", "TitleValue", Model.titles.Where(x => x.TitleID == Model.serviceProvider.TitleID)), htmlAttributes: new { @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.serviceProvider.TitleID, "", new { @class = "validation-text text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.serviceProvider.RepFirstName, htmlAttributes: new { @class = "control-label col-md-4" })
                                <div class="col-md-8">
                                    @Html.EditorFor(model => model.serviceProvider.RepFirstName, new { htmlAttributes = new { @class = "form-control", @style = "width: 100%" } })
                                    @Html.ValidationMessageFor(model => model.serviceProvider.RepFirstName, "", new { @class = "validation-text text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.serviceProvider.RepLastName, htmlAttributes: new { @class = "control-label col-md-4" })
                                <div class="col-md-8">
                                    @Html.EditorFor(model => model.serviceProvider.RepLastName, new { htmlAttributes = new { @class = "form-control", @style = "width: 100%" } })
                                    @Html.ValidationMessageFor(model => model.serviceProvider.RepLastName, "", new { @class = "validation-text text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.serviceProvider.RepJobDescription, htmlAttributes: new { @class = "control-label col-md-4" })
                                <div class="col-md-8">
                                    @Html.EditorFor(model => model.serviceProvider.RepJobDescription, new { htmlAttributes = new { @class = "form-control", @style = "width: 100%" } })
                                    @Html.ValidationMessageFor(model => model.serviceProvider.RepJobDescription, "", new { @class = "validation-text text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.serviceProvider.RepCellNum, htmlAttributes: new { @class = "control-label col-md-4" })
                                <div class="col-md-8">
                                    @Html.EditorFor(model => model.serviceProvider.RepCellNum, new { htmlAttributes = new { @class = "form-control", @style = "width: 100%" } })
                                    @Html.ValidationMessageFor(model => model.serviceProvider.RepCellNum, "", new { @class = "validation-text text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.serviceProvider.RepWorkNum, htmlAttributes: new { @class = "control-label col-md-4" })
                                <div class="col-md-8">
                                    @Html.EditorFor(model => model.serviceProvider.RepWorkNum, new { htmlAttributes = new { @class = "form-control", @style = "width: 100%" } })
                                    @Html.ValidationMessageFor(model => model.serviceProvider.RepWorkNum, "", new { @class = "validation-text text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.serviceProvider.RepEmail, htmlAttributes: new { @class = "control-label col-md-4" })
                                <div class="col-md-8">
                                    @Html.EditorFor(model => model.serviceProvider.RepEmail, new { htmlAttributes = new { @class = "form-control", @style = "width: 100%" } })
                                    @Html.ValidationMessageFor(model => model.serviceProvider.RepEmail, "", new { @class = "validation-text text-danger" })
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
        </div>
    </div>
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")

    <script>
        $(document).ready(function () { 
            $('[data-toggle="tooltip"]').tooltip();
        });
        $('#btnSave').click(function () {
            var btn = document.getElementById('btnPOST');
            btn.click();
        });
    </script>
}
