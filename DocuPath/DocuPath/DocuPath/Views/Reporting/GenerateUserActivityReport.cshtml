@model DocuPath.Models.DPViewModels.InsightUARDataset
<script type="text/javascript" src="https://cdnjs.cloudflare.com/ajax/libs/Chart.js/2.7.0/Chart.js"></script>

@{ ViewBag.Title = "Live Report Preview"; ViewBag.GenericHAPTICLocator = "LiveReportGeneric"; ViewBag.SpecificHAPTICLocator = "LiveReportSpecific"; ViewBag.PageInfoLocator = "LiveReport"; }

@* PAGE HEADER & ACTION BUTTONS: *@
<div class="grid hdr-grid" style="margin-top: 10px">
    <div class="page-hdr">
        <div class="page-header-subgrid">
            <div class="icon-circle mdl2icon mdl2-reporting"></div>
            <div class="circular-motif-left"><img src="~/Content/Resources/CircularMotifLeft.png" style="max-height: 45px" /></div>
            <div class="page-header-text">LIVE REPORT PREVIEW <span style="color: #666">– </span><span style="color: #ae1f1f">USER ACTIVITY REPORT</span></div>
        </div>
    </div>
    <div class="page-btns">
        <div class="page-buttons-subgrid buttons-three">
            <div grid-area="left"><img src="~/Content/Resources/CircuitryMotifLeft.png" class="circuitry-left-motif" /></div>
            <div></div>
            <div grid-area="btn1">
                <form class="minimalform" @*action="~/GenerateCauseOfDeathReport" method="post"*@ style="margin-top: 2px">
                    <button id="btnPrint" class="btn btn-default btn-generic btn-page-action mdl2icon mdl2-print btn-mdl2icon" type="button" data-toggle="tooltip" title="PRINT"></button>
                </form>
            </div>
            <div grid-area="btn2">
                <img src="~/Content/Resources/SlantedDivider.png" style="height: 45px; margin-top: 3px" />
            </div>
            <div grid-area="btn3">
                <form class="minimalform" action="javascript:void(0)" style="margin-top: 2px">
                    <button id="btnHapticToggle" class="btn btn-default btn-generic btn-page-action mdl2icon mdl2-help btn-mdl2icon" onclick="this.blur()" data-toggle="tooltip" title="HELP"></button>
                </form>
            </div>
            <div></div>
            <div class="right-motif" grid-area="right"><img src="~/Content/Resources/CircuitryMotifRight.png" class="circuitry-right-motif" /></div>
        </div>
    </div>
</div>

<div id="reportPreview" class="form-horizontal form-generic">
    <div id="reportDiv" class="grid reportcontainer border-generic form-horizontal" style="width: 760px !important; padding: 5px 5px 5px 10px; border-top-right-radius: 0px; border-bottom-right-radius: 0px">
        <img class="dplogo" src="~/Content/Resources/DPHorizontalLogoWhiteBG.png" style="max-height: 50px; max-width: 150px" />
        <img class="separator1" src="~/Content/Resources/SlantedDivider.png" style="max-height: 50px" />
        <div class="grid report-timestamp">
            <span class="stamp-icon insight-mdl2icon mdl2-action"></span>
            <div class="stamp-label">TIMESTAMP</div>
            <div class="stamp-value">@DateTime.Now.ToString("dd MMM yyyy HH:mm:ss")</div>
            <div class="stamp-icon insight-mdl2icon mdl2-datetime"></div>
            <div class="stamp-label">TIMEFRAME</div>
            <div class="stamp-value">@Model.dsTimeframeToString</div>
        </div>
        <img class="separator2" src="~/Content/Resources/SlantedDivider.png" style="max-height: 50px" />
        <div class="grid report-generator">
            <div class="generator-label">GENERATED BY</div>
            <span class="generator-icon insight-mdl2icon mdl2-individual"></span>
            <div class="generator-value">@Model.dsGeneratedBy</div>
        </div>
        <img class="insightlogo" src="~/Content/Resources/DP_INSIGHT_FINALLOGO_TRANSPARENTBG.png" style="max-height: 50px; max-width: 150px" />
        <div class="report-title">USER ACTIVITY REPORT <span style="color: #ccc">– </span><span style="color: rgba(255,220,220,1)">@ViewBag.TargetUser</span></div>
        <div class="grid report-params-summary-container">
            <div class="grid params-grid">
                <div class="params-icon insight-mdl2icon mdl2-count"></div>
                <div class="params-label">NUMBER OF ENTRIES</div>
                <div class="params-value">@Model.dsNumEntries</div>
                <div class="params-icon insight-mdl2icon mdl2-param"></div>
                <div class="params-label">SORTED BY</div>
                <div class="params-value">@Model.dsSortedBy</div>
                <div class="params-icon insight-mdl2icon mdl2-param"></div>
                <div class="params-label">GROUPED BY</div>
                <div class="params-value">@Model.dsGroupedBy</div>
            </div>
            <div class="vsep"></div>
            <div class="grid summary-grid">
                <div class="summary-icon insight-mdl2icon mdl2-info"></div>
                <div class="summary-label">REPORT SUMMARY</div>
                <div class="summary-value">This report contains double-grouped information (first by date, then by activity type) for the system activity of a specified user during the specified timeframe.</div>
            </div>
        </div>
        <div class="report-content">
            <table id="UAR" class="table table-striped table-hover table-condensed table-insight">
                <thead>
                    <tr>
                        <th class="colour-dpred">
                            ID
                        </th>
                        <th class="colour-dpred">
                            Timestamp
                        </th>
                        <th class="colour-dpred">
                            Critical Data String
                        </th>
                    </tr>
                </thead>
                @*@{ 
                    var chartLabels = "";
                    var chartData = "";
                }*@
                @for (int i = 0; i < Model.dsUAR.Count; i++)
                {
                    <tbody>
                        <tr style="border-right: 1px solid transparent !important"><th colspan="5" class="ctrl-break-one">@Model.dsUAR[i].cbrkDateTitle</th></tr>
                        @for (int j = 0; j < Model.dsUAR[i].cbrkDaysActivities.Count; j++)
                        {
                            <tr style="border-left: 1px solid transparent !important; margin-bottom: 5px!important"><th colspan="5" class="ctrl-break-two">@Model.dsUAR[i].cbrkDaysActivities[j].cbrkActivityTypeTitle</th></tr>

                            if (@Model.dsUAR[i].cbrkDaysActivities[j].cbrkActivityTypeEntries.Count == 0)
                            {
                                <tr><td colspan="5" class="no-entries">no user activity entries of this type found for this date!</td></tr>
                            }
                            else
                            {
                                for (int k = 0; k < @Model.dsUAR[i].cbrkDaysActivities[j].cbrkActivityTypeEntries.Count; k++)
                                {
                                    <tr>
                                        <td>
                                            @Model.dsUAR[i].cbrkDaysActivities[j].cbrkActivityTypeEntries[k].AuditLogTxID
                                        </td>
                                        <td>
                                            <strong class="table-large-identifier-insight">@Model.dsUAR[i].cbrkDaysActivities[j].cbrkActivityTypeEntries[k].TxTimeStamp.ToString("HH:mm:ss")</strong>
                                        </td>
                                        <td>
                                            @Model.dsUAR[i].cbrkDaysActivities[j].cbrkActivityTypeEntries[k].TxCriticalDataString
                                        </td>
                                    </tr>
                                }
                            }
                        }
                    </tbody>
                    //if (i == Model.dsUAR.Count)
                    //{
                    //    chartLabels += "\'" + Model.dsUAR[i].cbrkDateTitle + "', ";
                    //    chartData += k
                    //}
                }
            </table>
            @*<tr>
                    <td>
                        @Model.dsUAR[i].AuditLogTxID
                    </td>
                    <td>
                        @Model.dsUAR[i].TxDateStamp.ToString("dd MMM yyyy")
                    </td>
                    <td>
                        <strong class="table-large-identifier-insight">@Model.dsUAR[i].TxTimeStamp.ToString("HH:mm:ss")</strong>
                    </td>
                    <td>
                        @Model.dsUAR[i].AUDIT_TX_TYPE.TypeValue
                    </td>
                    <td>
                        @Model.dsUAR[i].TxCriticalDataString
                    </td>
                </tr>*@
            @*<div class="grid insight-chart-grid" style="margin-top: 5px">
                    <span class="chart-icon insight-mdl2icon mdl2-chart"></span>
                    <div class="chart-title">USER ACTIVITY BREAKDOWN - TRANSACTIONS BY ACTIVITY TYPE</div>
                    <div class="chart-subtitle">@Model.dsTimeframeToString</div>
                    <canvas class="chart-area" id="UARCanvas" width="750" height="500"></canvas>
            </div>*@
        </div>
        <div class="grid report-footer footer-bg">
            <div class="page-counter" style="margin-left: 80px">DocuPath INSIGHT REPORTING ENGINE</div>
            <div class="page-counter"><<<span class="page-counter-accent"> END </span>>></div>
        </div>
    </div>
</div>

@section Scripts{

    <script>
        //$('#rss').click(function (request, response) {
        //    var rssData = document.getElementById("srch-term").value
        //    $.ajax({
        //        url: '/Home/SendRSS/',
        //        data: "{ 'rssData': '" + rssData + "'}",
        //        dataType: "json",
        //        type: "POST",
        //        contentType: "application/json; charset=utf-8",
        //        success: function (result) {
        //            alert(result); //Throw Success Modal 404
        //            document.getElementById("srch-term").text() = "";
        //        },
        //    });
        //    rssData.value == "";
        //});

        $('#btnPrint').click(function (/*request, response*/) {
            this.blur();
            $('#reportDiv').printThis({
                debug: false,               // show the iframe for debugging
                importCSS: true,            // import page CSS
                importStyle: false,         // import style tags
                printContainer: true,       // grab outer container as well as the contents of the selector
                //loadCSS: "path/to/my.css",  // path to additional css file - us an array [] for multiple
                pageTitle: "",              // add title to print page
                removeInline: false,        // remove all inline styles from print elements
                //printDelay: 333,            // variable print delay
                header: null,               // prefix to html
                footer: null,               // postfix to html
                //base: false,                // preserve the BASE tag, or accept a string for the URL
                formValues: false,           // preserve input/form values
                canvas: false,              // copy canvas elements (experimental)
                //doctypeString: '...',       // enter a different doctype for older markup
                removeScripts: true,       // remove script tags from print content
                //copyTagClasses: false       // copy classes from the html & body tag
            });
        });
    </script>


    <script>
        @*$(document).ready(function () {

            console.log(@ViewBag.ChartLabels+" "+@ViewBag.ChartData);
            //Chart Colour Palettes:
            var Green = "#468847";
            var DarkGreen = "#316731";
            var Orange = "#ff7d00";
            var DarkOrange = "#a2601f";
            var Grey = "#999";
            var DarkGrey = "#666";
            var DPRed = "#ae1f1f";
            var DarkRed = "#7b1515";

            var DPRedEighty = "rgba(174, 31, 31, 0.8)";
            var DPRedSixty = "rgba(174, 31, 31, 0.6)";
            var DPRedForty = "rgba(174, 31, 31, 0.4)";
            var DPRedTwenty = "rgba(174, 31, 31, 0.2)";

            var GreyHundred = "rgba(128, 128, 128, 1)";
            var GreyEighty = "rgba(128, 128, 128, 0.8)";
            var GreySixty = "rgba(128, 128, 128, 0.6)";
            var GreyForty = "rgba(128, 128, 128, 0.4)";
            var GreyTwenty = "rgba(128, 128, 128, 0.2)";

            // UAR Doughnut:
            var ctx = document.getElementById("UARCanvas").getContext('2d');
            var UARbyType = new Chart(ctx, {
                type: 'pie',
                data: {
                    labels: ['Active', 'Pending', 'Archived', 'Locked'],
                    datasets: [
                        {
                            data: [ 1,5,10,18 ],
                            backgroundColor: [Green, Orange, Grey, DPRed],
                            borderColor: [DarkGreen, DarkOrange, DarkGrey, DarkRed],
                            borderWidth: 1,
                        }
                    ]
                },
                options: { cutoutPercentage: 50, aspectRatio: 1 }
            });
        });*@

        //var ctx = document.getElementById("UARCanvas").getContext('2d');
        //var myChart = new Chart(ctx, {
        //    type: 'bar',
        //    data: {
        //        labels: ["Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday", "Sunday"],
        //        datasets: [{
        //            label: 'Relative Frequency',
        //            data: [12, 19, 3, 5, 2, 26, 25],
        //            backgroundColor: [
        //                'rgba(174, 31, 31, 0.2)',
        //                'rgba(0, 0, 0, 0.2)',
        //                'rgba(128, 128, 128, 0.2)',
        //                'rgba(174, 31, 31, 0.2)',
        //                'rgba(0, 0, 0, 0.2)',
        //                'rgba(128, 128, 128, 0.2)',
        //            ],
        //            borderColor: [
        //                'rgba(174, 31, 31, 1)',
        //                'rgba(128, 128, 128, 1)',
        //                'rgba(180, 180, 180, 1)',
        //                'rgba(174, 31, 31, 1)',
        //                'rgba(128, 128, 128, 1)',
        //                'rgba(180, 180, 180, 1)',
        //            ],
        //            borderWidth: 1
        //        }]
        //    },
        //    options: {
        //        scales: {
        //            yAxes: [{
        //                ticks: {
        //                    beginAtZero:true
        //                }
        //            }]
        //        }
        //    }
        //});
        </script>
}